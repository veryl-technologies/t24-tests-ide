class T24TestStepEditorPanelBase ( wx.Panel ):

    def __init__( self, parent ):
        wx.Panel.__init__ ( self, parent, id = wx.ID_ANY, pos = wx.DefaultPosition, size = wx.Size( 832,555 ), style = wx.TAB_TRAVERSAL )

        bSizer1 = wx.BoxSizer( wx.VERTICAL )

        fgSizer3 = wx.FlexGridSizer( 0, 2, 0, 0 )
        fgSizer3.SetFlexibleDirection( wx.BOTH )
        fgSizer3.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )

        self.m_staticText1 = wx.StaticText( self, wx.ID_ANY, u"Test Case Name", wx.Point( -1,-1 ), wx.DefaultSize, wx.ALIGN_CENTRE )
        self.m_staticText1.Wrap( -1 )
        self.m_staticText1.SetFont( wx.Font( wx.NORMAL_FONT.GetPointSize(), 70, 93, 92, False, wx.EmptyString ) )
        self.m_staticText1.SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        fgSizer3.Add( self.m_staticText1, 0, wx.ALL, 8 )

        self.m_txtTestCaseName = wx.TextCtrl( self, wx.ID_ANY, u"Customer individual", wx.DefaultPosition, wx.Size( 500,-1 ), 0 )
        self.m_txtTestCaseName.SetFont( wx.Font( wx.NORMAL_FONT.GetPointSize(), 70, 93, 92, False, wx.EmptyString ) )
        self.m_txtTestCaseName.SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_CAPTIONTEXT ) )

        fgSizer3.Add( self.m_txtTestCaseName, 0, wx.ALL, 5 )


        bSizer1.Add( fgSizer3, 0, wx.EXPAND, 5 )

        fgSizer1 = wx.FlexGridSizer( 0, 2, 0, 0 )
        fgSizer1.SetFlexibleDirection( wx.BOTH )
        fgSizer1.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_NONE )

        self.m_staticline1 = wx.StaticLine( self, wx.ID_ANY, wx.Point( -1,-1 ), wx.Size( 2000,-1 ), wx.LI_HORIZONTAL )
        fgSizer1.Add( self.m_staticline1, 0, wx.EXPAND |wx.ALL, 5 )


        bSizer1.Add( fgSizer1, 0, 0, 5 )

        fgSizer2 = wx.FlexGridSizer( 0, 2, 0, 0 )
        fgSizer2.SetFlexibleDirection( wx.BOTH )
        fgSizer2.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )

        sbSizer8 = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Test Steps" ), wx.VERTICAL )

        bSizer2 = wx.BoxSizer( wx.VERTICAL )

        self.m_lsTestSteps = wx.ListCtrl( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 240,940 ), wx.LC_LIST )
        bSizer2.Add( self.m_lsTestSteps, 1, wx.ALL|wx.EXPAND, 5 )


        sbSizer8.Add( bSizer2, 1, wx.EXPAND, 5 )

        bSizer3 = wx.BoxSizer( wx.HORIZONTAL )

        self.m_hyperlinkDeleteTestStep = wx.HyperlinkCtrl( self, wx.ID_ANY, u"Delete", wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.HL_DEFAULT_STYLE )
        bSizer3.Add( self.m_hyperlinkDeleteTestStep, 0, wx.ALL, 5 )

        self.m_hyperlinkNewTestStep = wx.HyperlinkCtrl( self, wx.ID_ANY, u"New", wx.EmptyString, wx.DefaultPosition, wx.Size( -1,-1 ), wx.HL_DEFAULT_STYLE )
        bSizer3.Add( self.m_hyperlinkNewTestStep, 0, wx.ALL, 5 )


        sbSizer8.Add( bSizer3, 0, wx.TOP|wx.BOTTOM, 5 )


        fgSizer2.Add( sbSizer8, 1, wx.EXPAND|wx.RIGHT, 5 )

        sbSizer3 = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Test Step Details" ), wx.VERTICAL )

        bSizer4 = wx.BoxSizer( wx.HORIZONTAL )

        m_choiceTestStepActionChoices = [ u"M", u"E(nq)", u"I", u"A", u"S", u"V" ]
        self.m_choiceTestStepAction = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 60,-1 ), m_choiceTestStepActionChoices, 0 )
        self.m_choiceTestStepAction.SetSelection( 0 )
        bSizer4.Add( self.m_choiceTestStepAction, 0, wx.ALL, 5 )

        self.m_txtTestStepTransaction = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( -1,-1 ), 0 )
        bSizer4.Add( self.m_txtTestStepTransaction, 1, wx.ALL, 5 )


        sbSizer3.Add( bSizer4, 0, 0, 5 )

        fgSizer4 = wx.FlexGridSizer( 0, 2, 0, 0 )
        fgSizer4.SetFlexibleDirection( wx.BOTH )
        fgSizer4.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )

        self.m_staticline2 = wx.StaticLine( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 2000,-1 ), wx.LI_HORIZONTAL )
        fgSizer4.Add( self.m_staticline2, 0, wx.EXPAND |wx.ALL, 5 )


        sbSizer3.Add( fgSizer4, 0, 0, 5 )

        self.m_sizerTestStepDetails = wx.BoxSizer( wx.VERTICAL )

        self.m_panelTestStepContainer = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 2000,2000 ), wx.TAB_TRAVERSAL )
        self.m_panelTestStepContainer.SetForegroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )
        self.m_panelTestStepContainer.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        self.m_sizerTestStepDetails.Add( self.m_panelTestStepContainer, 0, wx.ALL|wx.EXPAND, 5 )


        sbSizer3.Add( self.m_sizerTestStepDetails, 0, wx.EXPAND, 5 )


        fgSizer2.Add( sbSizer3, 1, wx.LEFT|wx.EXPAND, 5 )


        bSizer1.Add( fgSizer2, 1, wx.EXPAND, 5 )


        self.SetSizer( bSizer1 )
        self.Layout()

        # Connect Events
        self.m_txtTestCaseName.Bind( wx.EVT_TEXT, self.OnTestCaseNameChanged )
        self.m_lsTestSteps.Bind( wx.EVT_LIST_ITEM_SELECTED, self.OnSelectedTestStepChanged )
        self.m_hyperlinkDeleteTestStep.Bind( wx.EVT_HYPERLINK, self.OnDeleteSelectedTestStep )
        self.m_hyperlinkNewTestStep.Bind( wx.EVT_HYPERLINK, self.OnNewTestStep )
        self.m_choiceTestStepAction.Bind( wx.EVT_CHOICE, self.OnActionChanged )
        self.m_txtTestStepTransaction.Bind( wx.EVT_TEXT, self.OnTransactionChanged )

    def __del__( self ):
        pass


    # Virtual event handlers, overide them in your derived class
    def OnTestCaseNameChanged( self, event ):
        event.Skip()

    def OnSelectedTestStepChanged( self, event ):
        event.Skip()

    def OnNewTestStep( self, event ):
        event.Skip()

    def OnDeleteSelectedTestStep( self, event ):
        event.Skip()

    def OnActionChanged( self, event ):
        event.Skip()

    def OnTransactionChanged( self, event ):
        event.Skip()

""" ========================================================================= """
class T24TestStepEditorPanel(T24TestStepEditorPanelBase):

    _testCaseTreeNode = None
    _tree = None
    _currentTestStep = None

    def __init__(self, parent, title):
        T24TestStepEditorPanelBase.__init__(self, parent)
        #self._parent.add_tab(self, title, allow_closing=False)
        self.m_lsTestSteps.InsertColumn(0, 'Name', wx.LIST_FORMAT_LEFT, 200)

    def setTestCase(self, treeNode, tree):
        self._testCaseTreeNode = treeNode
        self._tree = tree
        # todo - self._testCaseTreeNode._data.item is the test case we should read from it and update it
        if self._testCaseTreeNode is None:
            self.Hide()
        else:
            self.Show()
            self.m_txtTestCaseName.SetValue(self._testCaseTreeNode.GetText())
            self.fillTestStepsList(self._testCaseTreeNode._data.item.steps)

    def fillTestStepsList(self, steps):
        self.m_lsTestSteps.DeleteAllItems()
        idx=0
        if steps is not None:
            for step in steps:
                item = wx.ListItem()
                item.SetText(step.keyword + ' ' + ', '.join(step.args))
                item.SetId(idx)
                self.m_lsTestSteps.InsertItem(item)
                idx+=1

    def setTestStep(self, stepDetails):
        self._currentTestStep = T24TestStep(stepDetails)
        self.m_choiceTestStepAction.SetSelection(self.m_choiceTestStepAction.FindString(self._currentTestStep.Action))
        self.m_txtTestStepTransaction.SetValue(self._currentTestStep.AppVersion)
        self.ShowTestStepData()

    def ShowTestStepData(self):
        if self._currentTestStep is None:
            return

        if not not self.m_sizerTestStepDetails.Children:
            self.m_sizerTestStepDetails.DeleteWindows()

        panel = None
        if self._currentTestStep.Action is 'I':
            panel = T24InputTestStep(self)# todo check what is wrong with these panels
        elif self._currentTestStep.Action is 'A':
            panel = T24AuthorizeTestStep(self)# todo check what is wrong with these panels & why the old one cannot be deleted

        if panel is not None:
            panel.Size=wx.Size( 2000, 2000 )
            self.m_sizerTestStepDetails.Add(panel, 1, wx.ALL|wx.EXPAND, 5 )
            self.m_sizerTestStepDetails.Layout()

    # T24TestStepEditorPanelBase event handler overrides
    def OnSelectedTestStepChanged(self, event):
        self.setTestStep(event.Text)

    def OnTestCaseNameChanged( self, event ):
        if self._testCaseTreeNode is not None:
            self._testCaseTreeNode.SetText(self.m_txtTestCaseName.GetValue())
            self._tree.Refresh()
            # self.testCaseTreeNode.Update() ???
            # todo - set the new name to the data (testCaseTreeNode.data....)

    def OnActionChanged( self, event ):
        if self._currentTestStep is not None:
            self._currentTestStep.Action = self.m_choiceTestStepAction.GetStringSelection()
            self.ShowTestStepData()
        #if self.treeNode is not None:
        #    text = self.getTestStepName()
        #    self.treeNode.SetItemText(text)
        pass

    def OnTransactionChanged( self, event ):
        #if self.treeNode is not None:
        #    self.treeNode._text=self.getTestStepName()
        pass